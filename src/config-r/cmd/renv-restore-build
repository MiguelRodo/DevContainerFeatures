#!/usr/bin/env bash

# Exit immediately if an error occurs
set -e

# Function to display usage information
usage() {
    echo "‚ÑπÔ∏è  Usage: $(basename "$0") [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  -r, --restore                    Run renv::restore(transactional = TRUE) within all projects. Default is true."
    echo "  -e, --exclude PKG1,PKG2          Comma-separated list of packages to exclude from restore."
    echo "  -n, --no-pak                     Do not use pak for package management."
    echo "  -d, --directory                  Directory containing project directories. Default is '/usr/local/share/config-r/renv'."
    echo "  -D, --debug                      Enable debug mode."
    echo "  -h, --help                       Display this help message."
    echo ""
    echo "Description:"
    echo "  This script processes each top-level subdirectory in the specified directory by:"
    echo "    - Restoring packages using renv::restore, excluding specified packages (if restore is enabled)."
    echo "    - Running project-specific scripts if present (config-r-renv.R and config-r-renv.sh)."
    exit 1
}

# Initialize variables
RESTORE=true
PKG_EXCLUDE=""
DEBUG=false
USE_PAK=true
RENV_DIR="/usr/local/share/config-r/renv"

while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -r|--restore)
            RESTORE=true
            shift
            ;;
        -e|--exclude)
            PKG_EXCLUDE="$2"
            shift 2
            ;;
        -n|--no-pak)
            USE_PAK=false
            shift
            ;;
        -d|--directory)
            RENV_DIR="$2"
            shift 2
            ;;
        -D|--debug)
            DEBUG=true
            shift
            ;;
        -h|--help)
            usage
            ;;
        *)
            echo "‚ùå Unknown parameter passed: $1"
            usage
            ;;
    esac
done

debug() {
    if [ "$DEBUG" = true ]; then
        echo "üêõ DEBUG: $1"
    fi
}

debug "Running renv-restore-build"
debug "RESTORE: $RESTORE"
debug "PKG_EXCLUDE: $PKG_EXCLUDE"
debug "USE_PAK: $USE_PAK"
debug "RENV_DIR: $RENV_DIR"

exit_early_if_needed() {
    if [ ! -d "$RENV_DIR" ]; then
        echo "‚ÑπÔ∏è No 'renv/' directory found in '$RENV_DIR'."
        exit 0
    fi

    # Check if there are subdirectories within `RENV_DIR`
    if [ -z "$(find "$RENV_DIR" -mindepth 1 -maxdepth 1 -type d)" ]; then
        echo "‚ÑπÔ∏è No projects found in '$RENV_DIR'."
        exit 0
    fi
}

restore_projects() {
    # Loop over each top-level subdirectory in 'renv/'
    for PROJECT_DIR in "$RENV_DIR"/*/; do
        restore_project
    done
}

restore_project() {
    debug "PROJECT_DIR: $PROJECT_DIR"

    # Remove trailing slash and extract the project name
    PROJECT_DIR="${PROJECT_DIR%/}"
    PROJECT_NAME=$(basename "$PROJECT_DIR")
    debug "PROJECT_DIR: $PROJECT_DIR"
    debug "PROJECT_NAME: $PROJECT_NAME"
    
    if [ "$DEBUG" = "true" ]; then
        /usr/local/bin/config-r-renv-restore -d "$PROJECT_DIR" -r "$RESTORE" -e "$PKG_EXCLUDE" -D
    else
        /usr/local/bin/config-r-renv-restore -d "$PROJECT_DIR" -r "$RESTORE" -e "$PKG_EXCLUDE"
    fi
}

main() {
    exit_early_if_needed
    restore_projects
    echo "üéâ All projects have had restoration attempted."
}

main
